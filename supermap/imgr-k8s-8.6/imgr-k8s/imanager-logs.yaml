apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-es
  labels:
    app: fluentd-es
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-es
rules:
- apiGroups: [""]
  resources: ["namespaces" ,"pods"]
  verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-es
subjects:
- kind: ServiceAccount
  name: fluentd-es
  namespace: supermap
roleRef:
  kind: ClusterRole
  name: fluentd-es
  apiGroup: rbac.authorization.k8s.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fluentd-es-config
data:
  containers.input.conf: |-
    <source>
      type tail
      path /var/log/containers/*.log
      exclude_path ["/var/log/containers/fluentd-es*"]
      pos_file /var/log/es-containers.log.pos
      tag kubernetes.*
      read_from_head true
      format multi_format
      <pattern>
        format json
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </pattern>
      <pattern>
        format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
        time_format %Y-%m-%dT%H:%M:%S.%N%:z
      </pattern>
     </source>
  output.conf: |-
    <filter kubernetes.var.log.containers**>
       type parser
       key_name log
       format /^*(?<level>FATAL|fatal|ERROR|error|WARN|warn|INFO|info|DEBUG|debug|TRACE|trace)/
       reserve_data true
       emit_invalid_record_to_error false
    </filter>
    <filter kubernetes.**>
       type kubernetes_metadata
    </filter>   
    <match **>
       type elasticsearch
       log_level info
       include_tag_key true
       host elasticsearch
       port 9200
       logstash_format true
       # Set the chunk limits.
       buffer_chunk_limit 5M
       buffer_queue_limit 8
       flush_interval 60s
       # Never wait longer than 5 minutes between retries.
       max_retry_wait 30
       # Disable the limit on the number of retries (retry forever).
       disable_retry_limit
       # Use multiple threads for processing.
       num_threads 1
    </match>
---
apiVersion: apps/v1beta2
kind: DaemonSet
metadata:
  name: fluentd-es
  labels:
    app: fluentd-es
spec:
  selector:
    matchLabels:
      app: fluentd-es
  template:
    metadata:
      labels:
        app: fluentd-es
    spec:
      serviceAccountName: fluentd-es
      containers:
      - name: fluentd-es
        image: registry.cn-beijing.aliyuncs.com/supermap/fluentd-elasticsearch:v2.0.2
        imagePullPolicy: IfNotPresent
        env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /etc/fluent/config.d
      terminationGracePeriodSeconds: 30
      #tolerations: 
      #  - key: node-role.kubernetes.io/master
      #    operator: Exists
      #    effect: NoSchedule
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config-volume
        configMap:
          name: fluentd-es-config
